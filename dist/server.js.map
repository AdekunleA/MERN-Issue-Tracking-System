{"version":3,"sources":["../server/server.js"],"names":["SourceMapSupport","install","app","use","express","static","bodyParser","json","process","env","NODE_ENV","webpack","require","webpackDevMiddleware","webpackHotMiddleware","config","entry","push","plugins","HotModuleReplacementPlugin","bundler","noInfo","log","console","get","req","res","filter","query","status","effort_lte","effort_gte","effort","$lte","parseInt","$gte","search","$text","$search","_summary","undefined","page","_page","limit","_size","skip","cursor","db","collection","find","sort","_id","totalCount","count","then","result","toArray","_metadata","records","issues","catch","error","message","aggregate","$match","$group","owner","$sum","stats","results","forEach","issueId","ObjectId","params","id","next","issue","post","newIssue","body","created","Date","err","Issue","validateIssue","insertOne","cleanupIssue","insertedId","sendFile","path","resolve","put","update","convertIssue","savedIssue","delete","deleteOne","deleteResult","n","MongoClient","connect","connection","listen"],"mappings":"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","file":"server.js","sourcesContent":["import path from 'path';  \nimport SourceMapSupport from 'source-map-support';\nimport 'babel-polyfill';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport Issue from './issue.js';\n\n\nSourceMapSupport.install();\nconst app = express();\napp.use(express.static('static'));\napp.use(bodyParser.json());\n\nif (process.env.NODE_ENV !== 'production') {\n  const webpack = require('webpack');\n  const webpackDevMiddleware = require('webpack-dev-middleware');\n  const webpackHotMiddleware = require('webpack-hot-middleware');\n\n  const config = require('../webpack.config');\n  config.entry.app.push('webpack-hot-middleware/client', 'webpack/hot/only-dev-server');\n  config.plugins.push(new webpack.HotModuleReplacementPlugin());\n\n  const bundler = webpack(config);\n  app.use(webpackDevMiddleware(bundler, { noInfo: true }));\n  app.use(webpackHotMiddleware(bundler, { log: console.log }));\n}\n\napp.get('/api/issues', (req, res) => {\n  const filter = {};\n  if (req.query.status) filter.status = req.query.status;\n  if (req.query.effort_lte || req.query.effort_gte) filter.effort = {};\n  if (req.query.effort_lte) filter.effort.$lte = parseInt(req.query.effort_lte, 10);\n  if (req.query.effort_gte) filter.effort.$gte = parseInt(req.query.effort_gte, 10);\n  if (req.query.search) filter.$text = { $search: req.query.search };\n  \n  \n  if (req.query._summary === undefined) {\n    let page = req.query._page ? parseInt(req.query._page, 10) : 1;\n    let limit = req.query._size ? parseInt(req.query._size, 10) : 20;\n    if (limit > 50) limit = 50;\n    if (page < 0 || page === 0) {\n      page = 1;\n    }\n    let skip = limit * (page - 1);\n    const cursor = db.collection('issues').find(filter).sort({ _id: 1 }).skip(skip).limit(limit);\n    \n    let totalCount;\n    \n    db.collection('issues').count().then(result => {\n      totalCount = result;\n      return cursor.toArray();\n    }).then(issues => {\n      res.json({ _metadata: { totalCount }, records: issues });\n    })\n    .catch(error => {\n      console.log(error);\n      res.status(500).json({ message: `Internal Server Error: ${error}` });\n    });\n  } else {\n    db.collection('issues').aggregate([\n      { $match: filter },\n      { $group: { _id: { owner: '$owner', status: '$status' }, count: { $sum: 1 } } },\n    ]).toArray()\n    .then(results => {\n      const stats = {};\n      results.forEach(result => {\n        if (!stats[result._id.owner]) stats[result._id.owner] = {};\n        stats[result._id.owner][result._id.status] = result.count;\n      });\n      res.json(stats);\n    })\n    .catch(error => {\n      console.log(error);\n      res.status(500).json({ message: `Internal Server Error: ${error}` }); \n    });\n  }\n});\n  \napp.get('/api/issues/:id', (req,res) => {\n  let issueId;\n  try {\n    issueId = new ObjectId(req.params.id);\n  } catch (error) {\n    res.status(422).json({message: `Invalid issue ID format: ${error}`});\n    return;\n  }\n  \n  db.collection('issues').find({_id: issueId }).limit(1).next().then(issue => {\n    if (!issue) res.status(404).json({ message: `No such issue: ${issueId}`});\n    else res.json(issue);\n  }).catch(error => {\n    console.log(error);\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\n  });\n});\n     \napp.post('/api/issues', (req, res) => {\n  const newIssue = req.body;\n  newIssue.created = new Date();\n  if (!newIssue.status)\n    newIssue.status = 'New';\n\n  const err = Issue.validateIssue(newIssue);\n  if (err) {\n    res.status(422).json({ message: `Invalid request: ${err}` });\n    return;\n  }\n\n  db.collection('issues').insertOne(Issue.cleanupIssue(newIssue)).then(result =>\n    db.collection('issues').find({ _id: result.insertedId }).limit(1).next()\n  ).then(newIssue => {\n    res.json(newIssue);\n  }).catch(error => {\n    console.log(error);\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\n  });\n});\n\napp.get('*', (req,res) => {\n  res.sendFile(path.resolve('./static/index.html'));\n});\n\napp.put('/api/issues/:id', (req, res) => {\n  let issueId;\n  try {\n    issueId = new ObjectId(req.params.id);\n  } catch (error) {\n    res.status(422).json({ message: `Invalid issue ID format: ${error}` });\n    return;\n  }\n  \n  const issue = req.body;\n  delete issue._id;\n  \n  const err = Issue.validateIssue(issue);\n  if (err) {\n    res.status(422).json({ message: `Invalid request: ${err}`});\n    return;\n  }\n  \n  db.collection('issues').update({ _id: issueId }, Issue.convertIssue(issue)).then(\n    () => db.collection('issues').find({ _id: issueId }).limit(1).next()\n  ).then(savedIssue => { res.json(savedIssue); }).catch(error => {\n    console.log(error);\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\n  });\n  \n});\n\napp.delete('/api/issues/:id', (req,res) => {\n  let issueId;\n  try {\n    issueId = new ObjectId(req.params.id);\n  } catch (error) {\n    res.status(422).json({ message: `Invalid Issue ID format: ${error}` });\n    return;\n  }\n  \n  db.collection('issues').deleteOne({ _id: issueId }).then((deleteResult) => {\n    if (deleteResult.result.n === 1) res.json({ status: 'OK'});\n    else res.json({ status: 'Warning: object not found' });\n  }).catch(error =>{\n    console.log(error);\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\n  });\n});\n\nlet db;\nMongoClient.connect('mongodb://localhost').then(connection => {\n  db = connection.db('issuetracker');\n  app.listen(3000, () => {\n    console.log('App started on port 3000');\n  });\n}).catch(error => {\n  console.log('ERROR:', error);\n});\n"]}